##PARA ACTIVAR SPRING LOADED DESACTIVAREMOS LA CACHE DE LAS VISTAS, EN ESTE 
##CASO LAS DE THYMELEAF Y METEMOS LA DEPENDENCIA DE SPRING LOADED EN EL POM
##EN ESTE PROYECTO USAMOS DEVTOOLS QUE ES MÁS COMODO QUE SPRINGLOADED YA QUE
##NO TENEMOS QUE DETALLAR NINGUNA PROPIEDAD EN ESTA HOJA

#spring.thymeleaf.cache=false

################# CONFIGURACIÓN ALTERNATIVA DE PUERTO ##################

server.port:8080

################# CONFIGURACIÓN ALTERNATIVA DE BANNER ##################

#spring.main.banner-mode:off

############################## DATASOURCE ##############################

########################### BBDD H2 EMBEBIDA ###########################
########### ENTRAREMOS CON 'h2-console' SEGUIDO DE LOCALHOST ###########
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=juan
#spring.datasource.password=juan
#spring.datasource.driver-class-name=org.h2.Driver
#spring.h2.console.enabled=true

############################## BBDD MYSQL ##############################
spring.datasource.url=http://mysql-gestion-clientes-springboot-jpa.192.168.99.101.nip.io 
#spring.datasource.url=jdbc:mysql://localhost/clientesdb?useSSL=false
spring.datasource.username=usuario
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#PARA VERSIONES 2 O INFERIORES DE SPRINGBOOT O INFERIORES 
#DE SPRING FRAMEWORK 5 USAR ESTE DIALECTO EN MYSQL
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

##### LA PRIMERA VEZ QUE PONEMOS UN IMPORT.SQL ARRANCAR EN 'create' 
##### SI NECESITAMOS TIRAR UNA BASE PREVIA ARRANCAR CON 'create-drop'
##### UNA VEZ RECUPERADOS LOS DATOS SETEAMOS ESTO EN 'update' Y GUARDAMOS, 
##### REARRANCAMOS EL SERVIDOR Y YA NO PASA NADA POR TENER EL IMPORT, 
##### LA BASE YA ESTARÍA FUNCIONANDO A PARTIR DE LOS DATOS QUE HEMOS IMPORTADO
##### Y A PARTIR DE ALLI SEGUIRIA ACTUALIZANDO LO NUEVO EN BASE A LO QUE INTRODUCE EL USUARIO
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update

##### SI SETEAMOS ESTA PROPIEDAD EN DEBUG NOS DIRA EN LA CONSOLA LAS SENTENCIAS SQL QUE REALIZA
logging.level.org.hibernate.SQL=debug

##### AQUI LIMITAMOS EL TAMAÑO MAXIMO DE LOS ARCHIVOS QUE SE PUEDEN SUBIR AL SERVIDOR #####
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

############################## EXPORTACIONES ###########################
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.media-types.pdf = application/pdf
spring.mvc.contentnegotiation.media-types.xlsx = application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
spring.mvc.contentnegotiation.media-types.json = application/json
spring.mvc.contentnegotiation.media-types.xml = application/xml